// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[0..2], a=aOut, b=bOut, c=cOut, d=dOut, e=eOut, f=fOut, g=gOut, h=hOut);

    RAM512(in=in, load=aOut, address=address[3..11], out=AOut);
    RAM512(in=in, load=bOut, address=address[3..11], out=BOut);
    RAM512(in=in, load=cOut, address=address[3..11], out=COut);
    RAM512(in=in, load=dOut, address=address[3..11], out=DOut);

    RAM512(in=in, load=eOut, address=address[3..11], out=EOut);
    RAM512(in=in, load=fOut, address=address[3..11], out=FOut);
    RAM512(in=in, load=gOut, address=address[3..11], out=GOut);
    RAM512(in=in, load=hOut, address=address[3..11], out=HOut);

    Mux8Way16(a=AOut, b=BOut, c=COut, d=DOut, e=EOut, f=FOut, g=GOut, h=HOut, sel=address[0..2], out=out);
}